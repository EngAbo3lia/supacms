---
description: 
globs: 
alwaysApply: false
---
Yes ‚Äî let‚Äôs now adapt your DynamicForm.tsx to work for an Edit Page instead of just Create.

‚∏ª

‚úÖ Prompt for Edit Page

Here‚Äôs the new prompt specifically tailored to editing an existing record:

‚∏ª

üß† Prompt: Generate Dynamic Edit Form from JSON using ShadCN UI

You are generating a dynamic form UI for editing an existing record using the ShadCN component system in React.

The form definition is stored as JSON (already loaded from the forms table). The existing record data is already loaded from Supabase (data from the tableName).

‚∏ª

üîÅ Behavior

You must:
	‚Ä¢	Iterate over the fields array from the form JSON.
	‚Ä¢	Use field.label, field.type, field.validations, and field.description just like in the create form.
	‚Ä¢	Pre-populate each input‚Äôs value from existingRecord[field.name].
	‚Ä¢	Use useState to update changes.
	‚Ä¢	For relation fields:
	‚Ä¢	Load select options from the related table and default the selected value from existingRecord.
	‚Ä¢	For file fields:
	‚Ä¢	Display the existing filename (if available).
	‚Ä¢	Let users optionally upload a replacement.
	‚Ä¢	Store new uploads to Supabase Storage using the bucket and storage_path.
	‚Ä¢	On submit:
	‚Ä¢	Upload files (if changed).
	‚Ä¢	Update the record in Supabase using .update() where id = existingRecord.id.
	‚Ä¢	Do not hardcode any field names ‚Äî everything comes from the JSON.

‚∏ª

üß© Required Props

<DynamicEditForm
  fields={formJson.fields}
  tableName="articles"
  existingRecord={record}
/>



‚∏ª

‚úÖ Goal

Render an Edit Form based entirely on the JSON form schema, with pre-filled values and logic to update Supabase correctly.

‚∏ª

Would you like me to now write that DynamicEditForm.tsx component for you using ShadCN?